# This will run on Travis' 'new' container-based infrastructure
sudo: true

# Setup for Ubuntu Focal (20.04)
dist: focal

# Blacklist
branches:
  except:
    - gh-pages

language:
  - python

python:
  - 3.6

# Environment variables
env:
  global:
    - PACKAGE_DIR: $HOME/packages
    - GH_REPO_NAME: surf
    - DOXYFILE: $TRAVIS_BUILD_DIR/Doxyfile
    - GH_REPO_REF: github.com/slaclab/surf.git
    - MINICONDA_DIR: $PACKAGE_DIR/miniconda
    - secure: "dGGuxindIvA2oDIHPZ8xxO1sGjGMuL9DsGecbzMAUmd9A9Q0rj7rbuuhWEFRiGKnHKGEBrgb8Vh2SDsIDF1b98IqGflAHt++DN7BHyUh78pfONXsD7lhczK7LA/WWpd08gLwlTIIfNByviW7zH4eyMYH3qEdrEOKnRno6xqumL6w5wn2omGqosqr0kl3TcvAkc27Pf4qlqtVkVZkoG22l+OI9DAgZi+fwKbIQWSwyoO0YppUltumfBFqwaNSCQL5yrxywFJ7rbaSJaeQsYtBh+SDI3WMTgKiXEyenOUIguqhN7My8dyNyXoexKudwa2b3Liw2KxGxcwkL63gCEWhInY3ZgzeXotlyH/XKAidlhPH4DezH+NGQzGHfGCI9U7NB9C8O4duSWNSV33pfMycFIktWFg8fzyUDuHS5KV+yUWyBjHt5lrw8UgDNatxEK458Grnf4UvDuzn8FcO+JmhgJa0EYqoBu7LUSXfk9KGL5L9iLVJBQKibDEhNS9bV0tSzMgz67JDIjgwXK9MgMgh26+lwBLDQvY3AtJk+Zmtg6GXu5nota4mHDSVSnuy0ZzufZOO/LQq2FPLO/yT0EYnhg7/NCLfR62hPFBHVIv1uxfejfztB+gwXBRRunz6v3oRebzX2Y326WJhGWSIFkmxhtRxrj9H3IHBmczVhK7WlcY="

# Install dependencies
addons:
  apt:
    packages:
      - doxygen
      - doxygen-doc
      - doxygen-latex
      - doxygen-gui
      - graphviz
      - python3
      - flake8
      - ghdl

stages:
    - name: gen_release
      if: tag IS present
    # On master branch (but not on PRs to master) or in tagged releases
    # generate and deploy the documentation
    - name: generate_and_deploy
      if: (branch = master AND NOT (type = pull_request)) OR tag IS present
    # On all other branches or PRs, but not on tagged releases
    # only try to generate the documentation
    - name: generate
      if: (branch != master OR (type == pull_request)) AND tag IS blank
    - name: deploy_dev
      if: branch = pre-release AND tag IS blank AND NOT (type = pull_request)
    - name: deploy_tag
      if: tag IS present

# Generate and deploy documentation
jobs:
  include:
    # Stage to only generate the documentation
    - &documentation_stage
      stage: generate
      name: "Generate Documentation"
      before_script:
        - cd $TRAVIS_BUILD_DIR
        - chmod +x scripts/generateDocumentationAndDeploy.sh
        - make
        - rm -rf ghdl-build
        - python3 -m compileall -f python/
        - flake8 --count python/
      script:
        - ./scripts/generateDocumentationAndDeploy.sh 0

    # Stage to generate and deploy the documentation
    - <<: *documentation_stage
      stage: generate_and_deploy
      name: "Generate and Deploy Documentation"
      script:
        - ./scripts/generateDocumentationAndDeploy.sh 1

    - &deploy-conda-stage       # Conda for linux
      stage: deploy_dev
      name: "Deploy Conda"
      env: CONDA_TOKEN=$CONDA_UPLOAD_TOKEN_DEV
      before_install:
        # Prepare folders
        - mkdir -p $MINICONDA_DIR
        # Bring all the tags
        - git pull --unshallow
        - git pull
        # on OSX rogue needs an older version of the MacOS SDK
        - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
            git clone https://github.com/phracker/MacOSX-SDKs;
            sudo mv MacOSX-SDKs/MacOSX10.9.sdk /opt/;
            export CONDA_BUILD_SYSROOT=/opt/MacOSX10.9.sdk;
            export CONDA_BUILD=1;
          fi

      install:
        # Install Anaconda for the right architecture (linux or osx)
        - cd $MINICONDA_DIR
        - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
            wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
          else
            wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh;
          fi
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - hash -r
        - conda config --set always_yes yes
        - conda install conda-build anaconda-client conda-verify
        - conda update -q conda conda-build

      before_script:
        # Go back to top directory
        - cd $TRAVIS_BUILD_DIR

      script:
        # Build conda package
        - travis_wait 60 conda build --debug conda-recipe --output-folder bld-dir -c tidair-tag -c conda-forge

      after_success:
        # Upload conda package
        - anaconda -t $CONDA_TOKEN upload bld-dir/`echo $TRAVIS_OS_NAME`-64/*.tar.bz2

          #- <<: *deploy-conda-stage   # Conda for MacOS
          #os: osx
          #language: ruby  # osx does not support language=python

    - <<: *deploy-conda-stage   # Conda for Linux
      stage: deploy_tag
      env: CONDA_TOKEN=$CONDA_UPLOAD_TOKEN_TAG

      #- <<: *deploy-conda-stage   # Conda for macOS
      #stage: deploy_tag
      #os: osx
      #language: ruby  # osx does not support language=python
      #env: CONDA_TOKEN=$CONDA_UPLOAD_TOKEN_TAG

    - stage: gen_release
      name: "Generate Release"
      install:
         - git clone https://github.com/slaclab/ruckus.git
         - pip install -r ruckus/scripts/pip_requirements.txt
      script:
         - python ruckus/scripts/releaseGen.py
